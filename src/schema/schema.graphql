"""
Main line Pokemon game versions.
"""
enum GameVersion {
    black
    blue
    crystal
    diamond
    emerald
    gold
    moon
    pearl
    platinum
    red
    ruby
    sapphire
    shield
    silver
    sun
    sword
    white
    x
    y
    yellow
}

"""
Supported languages.
"""
enum Language {
    en
    es
}

"""
All available Pokemon types.
"""
enum PokemonType {
    bug
    dark
    dragon
    electric
    fairy
    fighting
    fire
    flying
    ghost
    grass
    ground
    ice
    normal
    poison
    psychic
    rock
    steel
    water
}


"""
Represents a Pokemon Record.
"""
interface PokemonRecord {
    "ID of Pokemon Record."
    id: ID!
}

"""
Represents a pokemon record to be saved.
"""
input PokemonToSave {
    "Pokemon id of record that is meant to be saved."
    id: ID!

    "Pokemon name"
    name: String!
}

"""
Represents a pokemon record to be deleted.
"""
input PokemonToDelete {
    "Pokemon id of record that is meant to be deleted."
    id: ID!
}

"""
Represents a successful deletion of a pokemon record.
"""
type DeletedPokemon implements PokemonRecord {
    "Pokemon id of deleted record."
    id: ID!
}

"""
Represents the measurement of a given entity.
"""
type Measurement {
    "Entity's height"
    height: String

    "Entity's weight"
    weight: String
}

"""
Represents the details of a given Pokemon.
"""
type Pokemon {
    "Pokemon's id, can match pokedex number (not always)."
    id: ID!

    "Pokemon's name"
    name: String

    "List of moves that given Pokemon can learn."
    moves: [String]

    "List of types given Pokemon has, should not be more than two."
    types: [PokemonType]

    "List of abilieties given Pokemon can have."
    abilities: [String]

    "Pokemon's measurement"
    measurement: Measurement

    "Determines if pokemon only have one type or not."
    isMonoType: Boolean

    "Pokedex flavor text entries for this Pokemon."
    entry(
        language: Language,
        version: GameVersion
    ): String
}

"""
Represents a saved pokemon record with its details.
"""
type SavedPokemon implements PokemonRecord {
    "Saved Pokemon id."
    id: ID!

    "Saved Pokemon details."
    pokemonDetails: Pokemon
}

type Mutation {
    "Save one or more pokemon records."
    savePokemons(
        pokemonsToSave: [PokemonToSave!]!
    ): [SavedPokemon]

    "Delete one or more pokemon records."
    deletePokemons(
        pokemonsToDelete: [PokemonToDelete!]!
    ): [DeletedPokemon]
}

type Query {
    "Returns the details of a pokemon by the provided id."
    pokemonById(id: ID!): Pokemon
}
